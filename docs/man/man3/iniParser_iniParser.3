.TH "iniParser.iniParser" 3 "Thu Feb 7 2013" "LS-CAT PGPMAC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
iniParser.iniParser \- 
.PP
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.ti -1c
.RI "def \fBread\fP"
.br
.ti -1c
.RI "def \fBsections\fP"
.br
.ti -1c
.RI "def \fBoptions\fP"
.br
.ti -1c
.RI "def \fBhas_section\fP"
.br
.ti -1c
.RI "def \fBhas_option\fP"
.br
.ti -1c
.RI "def \fBget\fP"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBf\fP"
.br
.ti -1c
.RI "\fBsd\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&. 

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU General Public License for more details\&.
.PP
You should have received a copy of the GNU General Public License along with this program\&. If not, see http://www.gnu.org/licenses/\&.
.PP
We assume the sections and options are case insensitive and that, although nested sections are implied by the format used by the md2, that the nesting has no practical importance\&.
.PP
The current version is for READING the files\&.
.PP
TODO: add writing\&. We'll need to keep track of the preferred case used in the ini file as well as the existing comments\&. This is mildly tricky since comments apparently can appear on both option lines and non-option lines so we'll need to track the line number within each section to preserve all the comments\&. Strictly speaking this is not necessary as we can just spit stuff out all lower case without comments and, presumably, the md2 should be able to deal with it\&. However, there is enough of a problem with the lack of documentation that willfully removing seems like a bad idea\&. 
.PP
Definition at line 42 of file iniParser\&.py\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def iniParser\&.iniParser\&.__init__ (self, fn)"

.PP
Definition at line 44 of file iniParser\&.py\&.
.PP
.nf
44 
45     def __init__( self, fn):
46         self\&.f = open( fn, 'r')
47         self\&.sd = {}
48 

.fi
.SH "Member Function Documentation"
.PP 
.SS "def iniParser\&.iniParser\&.get (self, section, option)"

.PP
Definition at line 99 of file iniParser\&.py\&.
.PP
.nf
99 
100     def get( self, section, option):
101         return self\&.sd[section\&.lower()][option\&.lower()]
102 

.fi
.SS "def iniParser\&.iniParser\&.has_option (self, section, option)"

.PP
Definition at line 94 of file iniParser\&.py\&.
.PP
.nf
94 
95     def has_option( self, section, option):
96         if self\&.has_section( section):
97             return self\&.sd[section\&.lower()]\&.has_key( option\&.lower())
98         return False

.fi
.SS "def iniParser\&.iniParser\&.has_section (self, section)"

.PP
Definition at line 91 of file iniParser\&.py\&.
.PP
.nf
91 
92     def has_section( self, section):
93         return self\&.sd\&.has_key( section\&.lower())

.fi
.SS "def iniParser\&.iniParser\&.options (self, section)"

.PP
Definition at line 87 of file iniParser\&.py\&.
.PP
.nf
87 
88     def options( self, section):
89         return self\&.sd[section\&.lower()]\&.keys()
90 

.fi
.SS "def iniParser\&.iniParser\&.read (self)"

.PP
Definition at line 49 of file iniParser\&.py\&.
.PP
.nf
49 
50     def read( self):
51         self\&.sd = {}
52         current_section = 'default'
53         current_dict    = {}
54         for l in self\&.f\&.readlines():
55             sl = l\&.strip()
56             if len(sl) > 0:
57                 if sl[0] == ';':
58                     continue
59 
60                 if sl[0] == '[' and sl\&.find(']') > 1:
61                     self\&.sd[current_section] = current_dict
62                     current_dict = {}
63                     current_section = (sl[1:sl\&.find(']')])\&.lower()
64 
65                 else:
66                     if sl\&.find(';') > 0:
67                         s = sl[0:sl\&.find(';')]
68                     else:
69                         s = sl
70 
71                     if s\&.find('=') > 0:
72                         slist = s\&.split('=')
73                         if len(slist) == 2:
74                             k = (slist[0]\&.strip())\&.lower()
75                             v = slist[1]\&.strip()
76                             current_dict[k] = v
77             
78         self\&.sd[current_section] = current_dict
79 
80     
81         self\&.f\&.close()
82 

.fi
.SS "def iniParser\&.iniParser\&.sections (self)"

.PP
Definition at line 83 of file iniParser\&.py\&.
.PP
.nf
83 
84     def sections( self):
85         ks = set(self\&.sd\&.keys())
86         return list(ks\&.difference( ['default']))

.fi
.SH "Field Documentation"
.PP 
.SS "iniParser\&.iniParser\&.f"

.PP
Definition at line 45 of file iniParser\&.py\&.
.SS "iniParser\&.iniParser\&.sd"

.PP
Definition at line 46 of file iniParser\&.py\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LS-CAT PGPMAC from the source code\&.
