.TH "lspg_getcurrentsampleid_struct" 3 "Tue Jan 15 2013" "LS-CAT PGPMAC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lspg_getcurrentsampleid_struct \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <pgpmac\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "pthread_mutex_t \fBmutex\fP"
.br
.RI "\fIpractice safe threading \fP"
.ti -1c
.RI "pthread_cond_t \fBcond\fP"
.br
.RI "\fIfor signaling \fP"
.ti -1c
.RI "int \fBno_rows_returned\fP"
.br
.RI "\fIflag for an empty return \fP"
.ti -1c
.RI "int \fBnew_value_ready\fP"
.br
.RI "\fIOK, there is never a value, we need a variable for the conditional wait and this is what we call it everywhere else\&. \fP"
.ti -1c
.RI "unsigned int \fBgetcurrentsampleid\fP"
.br
.RI "\fIthe sample we think is mounted on the diffractometer \fP"
.ti -1c
.RI "int \fBgetcurrentsampleid_isnull\fP"
.br
.RI "\fIthe sample we think is mounted on the diffractometer \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 178 of file pgpmac\&.h\&.
.SH "Field Documentation"
.PP 
.SS "pthread_cond_t lspg_getcurrentsampleid_struct::cond"

.PP
for signaling 
.PP
Definition at line 180 of file pgpmac\&.h\&.
.SS "unsigned int lspg_getcurrentsampleid_struct::getcurrentsampleid"

.PP
the sample we think is mounted on the diffractometer 
.PP
Definition at line 183 of file pgpmac\&.h\&.
.SS "int lspg_getcurrentsampleid_struct::getcurrentsampleid_isnull"

.PP
the sample we think is mounted on the diffractometer 
.PP
Definition at line 184 of file pgpmac\&.h\&.
.SS "pthread_mutex_t lspg_getcurrentsampleid_struct::mutex"

.PP
practice safe threading 
.PP
Definition at line 179 of file pgpmac\&.h\&.
.SS "int lspg_getcurrentsampleid_struct::new_value_ready"

.PP
OK, there is never a value, we need a variable for the conditional wait and this is what we call it everywhere else\&. 
.PP
Definition at line 182 of file pgpmac\&.h\&.
.SS "int lspg_getcurrentsampleid_struct::no_rows_returned"

.PP
flag for an empty return 
.PP
Definition at line 181 of file pgpmac\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LS-CAT PGPMAC from the source code\&.
